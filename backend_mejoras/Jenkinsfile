pipeline {
    /*  Contenedor PHP 8.2  */
    agent {
        docker {
            image 'php:8.2-cli'
            args  '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    environment {
        SONARQUBE_ENV = 'sonarqube'     // nombre del server Sonar en Jenkins
        PROJECT_DIR   = 'backend_mejoras'
        DB_HOST       = 'mysql'
    }

    stages {

        /* 1Ô∏è‚É£  Clone (PAT embebido en la URL) */
        stage('Clone') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    git branch: 'main',
                        url: 'https://x-access-token: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@github.com/ffrank123/EXAMENN.git'
                }
            }
        }

        /* 2Ô∏è‚É£  Install dependencias */
        stage('Install') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                        apt-get update -qq
                        apt-get install -y unzip libzip-dev > /dev/null
                        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
                        docker-php-ext-install zip pdo_mysql
                        composer install --no-interaction --prefer-dist
                        cp .env.ci .env
                        php artisan key:generate
                    '''
                }
            }
        }

        /* 3Ô∏è‚É£  Migrate + Tests */
        stage('Test') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                        php artisan migrate --seed --force
                        php artisan test \
                          --log-junit storage/test-results.xml \
                          --coverage-clover storage/coverage/clover.xml
                    '''
                }
            }
        }

        /* 4Ô∏è‚É£  SonarQube */
        stage('Sonar') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                        curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip -o /tmp/ss.zip
                        unzip -qq /tmp/ss.zip -d /opt
                        ln -sf /opt/sonar-scanner-*/bin/sonar-scanner /usr/local/bin/sonar-scanner
                    '''
                    withSonarQubeEnv("${SONARQUBE_ENV}") {
                        sh '''
                            sonar-scanner \
                              -Dsonar.projectKey=turismo-capachica \
                              -Dsonar.sources=app \
                              -Dsonar.tests=tests \
                              -Dsonar.php.coverage.reportPaths=storage/coverage/clover.xml
                        '''
                    }
                }
            }
        }

        /* 5Ô∏è‚É£  Quality Gate */
        stage('Quality gate') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        /* 6Ô∏è‚É£  Deploy simulado */
        stage('Deploy') {
            steps {
                echo 'üöÄ  Despliegue simulado'
            }
        }
    }
}
