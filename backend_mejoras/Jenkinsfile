pipeline {
    agent any

    environment {
        SONARQUBE_ENV = 'sonarqube'
        PROJECT_DIR   = 'backend_mejoras'
    }

    stages {
        stage('Clonar repositorio') {
            steps {
                git branch: 'main',
                    url: 'https://x-access-token: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@github.com/ffrank123/EXAMENN.git'
            }
        }

        stage('Instalar dependencias') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                      composer install --no-interaction --prefer-dist
                      cp .env.ci .env
                      php artisan key:generate
                    '''
                }
            }
        }

        stage('Pruebas') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                      php artisan migrate --seed --force
                      php artisan test \
                        --log-junit storage/test-results.xml \
                        --coverage-clover storage/coverage/clover.xml
                    '''
                }
            }
        }

        stage('AnÃ¡lisis SonarQube') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                      if ! command -v sonar-scanner >/dev/null ; then
                        curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip -o /tmp/ss.zip
                        unzip -qq /tmp/ss.zip -d /opt
                        ln -sf /opt/sonar-scanner-*/bin/sonar-scanner /usr/local/bin/sonar-scanner
                      fi
                    '''
                    withSonarQubeEnv("${SONARQUBE_ENV}") {
                        sh '''
                          sonar-scanner \
                            -Dsonar.projectKey=turismo-capachica \
                            -Dsonar.sources=app \
                            -Dsonar.tests=tests \
                            -Dsonar.php.coverage.reportPaths=storage/coverage/clover.xml
                        '''
                    }
                }
            }
        }

        stage('Quality Gate') { steps { waitForQualityGate abortPipeline: true } }
        stage('Deploy')       { steps { echo 'ðŸš€  Despliegue simulado' } }
    }
}
