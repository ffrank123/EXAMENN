pipeline {
    /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
       1. AGENTE DOCKER CON PHP 8.2 (soporta Docker-in-Docker)
    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
    agent {
        docker {
            image 'php:8.2-cli'
            args  '-v /var/run/docker.sock:/var/run/docker.sock'
        }
    }

    /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
       2. VARIABLES GLOBALES
    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
    environment {
        GIT_CREDENTIAL_ID = 'github-token-franks'  // ID de la credencial
        SONARQUBE_ENV     = 'sonarqube'           // Nombre configurado en Jenkins
        PROJECT_DIR       = 'backend_mejoras'     // Carpeta de tu proyecto
        DB_HOST           = 'mysql'               // Host de la BD (si la usas)
    }

    /* â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€
       3. STAGES
    â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€â”€ */
    stages {

        /* 3.1 Clone */
        stage('Clone') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    git branch: 'main',
                        credentialsId: env.GIT_CREDENTIAL_ID,
                        url: 'https://github.com/ffrank123/EXAMENN.git'
                }
            }
        }

        /* 3.2 Install */
        stage('Install') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                        apt-get update -qq
                        apt-get install -y unzip libzip-dev > /dev/null
                        curl -sS https://getcomposer.org/installer | php -- --install-dir=/usr/local/bin --filename=composer
                        docker-php-ext-install zip pdo_mysql
                        composer install --no-interaction --prefer-dist
                        cp .env.ci .env
                        php artisan key:generate
                    '''
                }
            }
        }

        /* 3.3 Test */
        stage('Test') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                        php artisan migrate --seed --force
                        php artisan test \
                          --log-junit storage/test-results.xml \
                          --coverage-clover storage/coverage/clover.xml
                    '''
                }
            }
        }

        /* 3.4 Sonar */
        stage('Sonar') {
            steps {
                dir("${PROJECT_DIR}") {
                    sh '''
                        curl -sL https://binaries.sonarsource.com/Distribution/sonar-scanner-cli/sonar-scanner-cli-5.0.1.3006-linux.zip -o /tmp/ss.zip
                        unzip -qq /tmp/ss.zip -d /opt
                        ln -sf /opt/sonar-scanner-*/bin/sonar-scanner /usr/local/bin/sonar-scanner
                    '''
                    withSonarQubeEnv("${SONARQUBE_ENV}") {
                        sh '''
                            sonar-scanner \
                              -Dsonar.projectKey=turismo-capachica \
                              -Dsonar.sources=app \
                              -Dsonar.tests=tests \
                              -Dsonar.php.coverage.reportPaths=storage/coverage/clover.xml
                        '''
                    }
                }
            }
        }

        /* 3.5 Quality Gate */
        stage('Quality gate') {
            steps {
                timeout(time: 2, unit: 'MINUTES') {
                    waitForQualityGate abortPipeline: true
                }
            }
        }

        /* 3.6 Deploy (simulado) */
        stage('Deploy') {
            steps {
                echo 'ðŸš€  Despliegue simulado'
            }
        }
    }
}
